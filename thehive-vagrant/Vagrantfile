# -*- mode: ruby -*-
# vi: set ft=ruby :

$installTheHive = <<-SCRIPT
 	echo 'deb https://dl.bintray.com/thehive-project/debian-stable any main' | sudo tee -a /etc/apt/sources.list.d/thehive-project.list
	curl https://raw.githubusercontent.com/TheHive-Project/TheHive/master/PGP-PUBLIC-KEY | sudo apt-key add -
	sudo apt-get update -y
	sudo apt-get install thehive -y
SCRIPT

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
	# The most common configuration options are documented and commented below.
	# For a complete reference, please see the online documentation at
	# https://docs.vagrantup.com.

	# Every Vagrant development environment requires a box. You can search for
	# boxes at https://vagrantcloud.com/search.
	config.vm.box = "bento/ubuntu-18.04"
	config.vm.hostname = "thehive-master1.vm"

	# Disable automatic box update checking. If you disable this, then
	# boxes will only be checked for updates when the user runs
	# `vagrant box outdated`. This is not recommended.
	# config.vm.box_check_update = false

	# Create a forwarded port mapping which allows access to a specific port
	# within the machine from a port on the host machine. In the example below,
	# accessing "localhost:8080" will access port 80 on the guest machine.
	# NOTE: This will enable public access to the opened port
	#config.vm.network "forwarded_port", guest: 80, host: 80
	# config.vm.network "forwarded_port", guest: 3306, host: 3310

	# Create a forwarded port mapping which allows access to a specific port
	# within the machine from a port on the host machine and only allow access
	# via 127.0.0.1 to disable public access
	# config.vm.network "forwarded_port", guest: 9000, host: 8080, host_ip: "127.0.0.1"

	# Create a private network, which allows host-only access to the machine
	# using a specific IP.
	config.vm.network "private_network", ip: "192.168.90.90"

	# Create a public network, which generally matched to bridged network.
	# Bridged networks make the machine appear as another physical device on
	# your network.
	# config.vm.network "public_network"
	config.vm.network "public_network", bridge: "en0: Wi-Fi (AirPort)"
	config.vm.network "public_network", ip: "192.168.100.100"

	# Share an additional folder to the guest VM. The first argument is
	# the path on the host to the actual folder. The second argument is
	# the path on the guest to mount the folder. And the optional third
	# argument is a set of non-required options.
	config.vm.synced_folder ".", "/vagrant",
	  id: "vagrant"
	 #:owner => 'www-data',
	 #:group => 'www-data'
	 #:mount_options => ['dmode=775','fmode=775']

	#config.vm.synced_folder ".", "/v", id: "vagrant"

	# Provider-specific configuration so you can fine-tune various
	# backing providers for Vagrant. These expose provider-specific options.
	# Example for VirtualBox:
	#
	config.vm.provider "virtualbox" do |vb|
		# Display the VirtualBox GUI when booting the machine
		# vb.gui = true
		vb.name = "thehive-master1"

		vb.cpus = 2

		# Customize the amount of memory on the VM:
		vb.memory = "1092"
  	end

  	#config.ssh.guest_port=2202

  	config.vm.provision "shell", inline: $installTheHive
end
